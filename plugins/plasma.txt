import colorsys
from pluginbase import PluginBase
import constants

class Plasma(PluginBase):
    def __init__(self, ledbox, grid):
        PluginBase.__init__(self, ledbox, grid)
        self.changed = True
		self.t = 0
		self.dt = 0.1
		self.width = self.grid.width
		self.height = self.grid.height

    @property
    def name(self) -> str: 
        return "Plasma"

    @property
    def options(self): 
        return {
            "order": 6,
            "in_random": False,
            "need_arrows": False,
            "show_button": True,
            "display_name": "Plasma",
            "button_text": "Plasma",
            "button_type": "ms-default"
        }

	def plasma(self, w, h, t):
		out = [Color(0, 0, 0) for x in range(w * h)]
		for x in range(w):
			for y in range(h):
				hue = 4.0 + math.sin(t + x) + math.sin(t + y / 4.5) \
					+ math.sin(x + y + t) + math.sin(math.sqrt((x + t) ** 2.0 + (y + 1.5 * t) ** 2.0) / 4.0)
				hsv = colorsys.hsv_to_rgb(heu / 8.0, 1, 1)
				out[x + y * w] = Color(*[int(round(c * 10.0)) for c in hsv])
		return out

    def start(self):
        super().start()
        # print("Start", self.options["display_name"])
        self.changed = True
        
    def stop(self):
        # print("Stop", self.options["display_name"])
        super().stop()

    def step(self):
        # print("Step", self.options["display_name"])

		self.t = self.t + self.dt
		pic = plasma(self.width, self.height, self.t)

        if self.changed:
            self.draw()
            self.grid.refresh()
            self.changed = False
        super().step()


while True:
   for i in range(0, strip.numPixels(), 1):
      strip.setPixelColor(i, pic[i])
      strip.show()
      time.sleep(0.01)

